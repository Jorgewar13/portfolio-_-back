"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_tsparticles_engine_browser_Core_Particle_js"],{

/***/ "(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Core/Particle.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tsparticles/engine/browser/Core/Particle.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Particle: function() { return /* binding */ Particle; }\n/* harmony export */ });\n/* harmony import */ var _Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Utils/NumberUtils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Utils/NumberUtils.js\");\n/* harmony import */ var _Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Utils/Utils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Utils/Utils.js\");\n/* harmony import */ var _Utils_Constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Utils/Constants.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Core/Utils/Constants.js\");\n/* harmony import */ var _Utils_ColorUtils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Utils/ColorUtils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Utils/ColorUtils.js\");\n/* harmony import */ var _Options_Classes_Interactivity_Interactivity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Options/Classes/Interactivity/Interactivity.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Options/Classes/Interactivity/Interactivity.js\");\n/* harmony import */ var _Utils_Vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Utils/Vector.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Core/Utils/Vector.js\");\n/* harmony import */ var _Utils_Vector3d_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Utils/Vector3d.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Core/Utils/Vector3d.js\");\n/* harmony import */ var _Utils_CanvasUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Utils/CanvasUtils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js\");\n/* harmony import */ var _Utils_OptionsUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Utils/OptionsUtils.js */ \"(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Utils/OptionsUtils.js\");\n\n\n\n\n\n\n\n\n\nconst defaultRetryCount = 0, double = 2, half = 0.5, squareExp = 2;\nfunction loadEffectData(effect, effectOptions, id, reduceDuplicates) {\n    const effectData = effectOptions.options[effect];\n    if (!effectData) {\n        return;\n    }\n    return (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.deepExtend)({\n        close: effectOptions.close,\n        fill: effectOptions.fill\n    }, (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(effectData, id, reduceDuplicates));\n}\nfunction loadShapeData(shape, shapeOptions, id, reduceDuplicates) {\n    const shapeData = shapeOptions.options[shape];\n    if (!shapeData) {\n        return;\n    }\n    return (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.deepExtend)({\n        close: shapeOptions.close,\n        fill: shapeOptions.fill\n    }, (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(shapeData, id, reduceDuplicates));\n}\nfunction fixOutMode(data) {\n    if (!(0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.isInArray)(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * double;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    } else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n}\nclass Particle {\n    destroy(override) {\n        var _shapeDrawer_particleDestroy;\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator, shapeDrawer = container.shapeDrawers.get(this.shape);\n        shapeDrawer === null || shapeDrawer === void 0 ? void 0 : (_shapeDrawer_particleDestroy = shapeDrawer.particleDestroy) === null || _shapeDrawer_particleDestroy === void 0 ? void 0 : _shapeDrawer_particleDestroy.call(shapeDrawer, this);\n        for (const [, plugin] of container.plugins){\n            var _plugin_particleDestroyed;\n            (_plugin_particleDestroyed = plugin.particleDestroyed) === null || _plugin_particleDestroyed === void 0 ? void 0 : _plugin_particleDestroyed.call(plugin, this, override);\n        }\n        for (const updater of container.particles.updaters){\n            var _updater_particleDestroyed;\n            (_updater_particleDestroyed = updater.particleDestroyed) === null || _updater_particleDestroyed === void 0 ? void 0 : _updater_particleDestroyed.call(updater, this, override);\n        }\n        pathGenerator === null || pathGenerator === void 0 ? void 0 : pathGenerator.reset(this);\n        this._engine.dispatchEvent(\"particleDestroyed\", {\n            container: this.container,\n            data: {\n                particle: this\n            }\n        });\n    }\n    async draw(delta) {\n        const container = this.container, canvas = container.canvas;\n        for (const [, plugin] of container.plugins){\n            await canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        await canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _this_bubble_color;\n        return this._getRollColor((_this_bubble_color = this.bubble.color) !== null && _this_bubble_color !== void 0 ? _this_bubble_color : (0,_Utils_ColorUtils_js__WEBPACK_IMPORTED_MODULE_3__.getHslFromAnimation)(this.color));\n    }\n    getMass() {\n        return this.getRadius() ** squareExp * Math.PI * half;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z\n        };\n    }\n    getRadius() {\n        var _this_bubble_radius;\n        return (_this_bubble_radius = this.bubble.radius) !== null && _this_bubble_radius !== void 0 ? _this_bubble_radius : this.size.value;\n    }\n    getStrokeColor() {\n        var _this_bubble_color;\n        return this._getRollColor((_this_bubble_color = this.bubble.color) !== null && _this_bubble_color !== void 0 ? _this_bubble_color : (0,_Utils_ColorUtils_js__WEBPACK_IMPORTED_MODULE_3__.getHslFromAnimation)(this.strokeColor));\n    }\n    async init(id, position, overrideOptions, group) {\n        var _effectDrawer_particleInit, _shapeDrawer_particleInit;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.effectClose = true;\n        this.effectFill = true;\n        this.shapeClose = true;\n        this.shapeFill = true;\n        this.pathRotation = false;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {}\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = (0,_Utils_OptionsUtils_js__WEBPACK_IMPORTED_MODULE_8__.loadParticlesOptions)(this._engine, container, mainOptions.particles), effectType = particlesOptions.effect.type, shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.effect = (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(effectType, this.id, reduceDuplicates);\n        this.shape = (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(shapeType, this.id, reduceDuplicates);\n        const effectOptions = particlesOptions.effect, shapeOptions = particlesOptions.shape;\n        if (overrideOptions) {\n            var _overrideOptions_effect, _overrideOptions_shape;\n            if ((_overrideOptions_effect = overrideOptions.effect) === null || _overrideOptions_effect === void 0 ? void 0 : _overrideOptions_effect.type) {\n                const overrideEffectType = overrideOptions.effect.type, effect = (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(overrideEffectType, this.id, reduceDuplicates);\n                if (effect) {\n                    this.effect = effect;\n                    effectOptions.load(overrideOptions.effect);\n                }\n            }\n            if ((_overrideOptions_shape = overrideOptions.shape) === null || _overrideOptions_shape === void 0 ? void 0 : _overrideOptions_shape.type) {\n                const overrideShapeType = overrideOptions.shape.type, shape = (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.itemFromSingleOrMultiple)(overrideShapeType, this.id, reduceDuplicates);\n                if (shape) {\n                    this.shape = shape;\n                    shapeOptions.load(overrideOptions.shape);\n                }\n            }\n        }\n        this.effectData = loadEffectData(this.effect, effectOptions, this.id, reduceDuplicates);\n        this.shapeData = loadShapeData(this.shape, shapeOptions, this.id, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const effectData = this.effectData;\n        if (effectData) {\n            particlesOptions.load(effectData.particles);\n        }\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new _Options_Classes_Interactivity_Interactivity_js__WEBPACK_IMPORTED_MODULE_4__.Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        var _effectData_fill;\n        this.effectFill = (_effectData_fill = effectData === null || effectData === void 0 ? void 0 : effectData.fill) !== null && _effectData_fill !== void 0 ? _effectData_fill : particlesOptions.effect.fill;\n        var _effectData_close;\n        this.effectClose = (_effectData_close = effectData === null || effectData === void 0 ? void 0 : effectData.close) !== null && _effectData_close !== void 0 ? _effectData_close : particlesOptions.effect.close;\n        var _shapeData_fill;\n        this.shapeFill = (_shapeData_fill = shapeData === null || shapeData === void 0 ? void 0 : shapeData.fill) !== null && _shapeData_fill !== void 0 ? _shapeData_fill : particlesOptions.shape.fill;\n        var _shapeData_close;\n        this.shapeClose = (_shapeData_close = shapeData === null || shapeData === void 0 ? void 0 : shapeData.close) !== null && _shapeData_close !== void 0 ? _shapeData_close : particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(pathOptions.delay.value) * _Utils_Constants_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsToSeconds;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                await this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = (0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.initParticleNumericAnimationValue)(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        const decayOffset = 1;\n        this.moveDecay = decayOffset - (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(this.options.move.decay);\n        const particles = container.particles;\n        particles.setLastZIndex(this.position.z);\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let effectDrawer = container.effectDrawers.get(this.effect);\n        if (!effectDrawer) {\n            effectDrawer = this._engine.getEffectDrawer(this.effect);\n            if (effectDrawer) {\n                container.effectDrawers.set(this.effect, effectDrawer);\n            }\n        }\n        if (effectDrawer === null || effectDrawer === void 0 ? void 0 : effectDrawer.loadEffect) {\n            await effectDrawer.loadEffect(this);\n        }\n        let shapeDrawer = container.shapeDrawers.get(this.shape);\n        if (!shapeDrawer) {\n            shapeDrawer = this._engine.getShapeDrawer(this.shape);\n            if (shapeDrawer) {\n                container.shapeDrawers.set(this.shape, shapeDrawer);\n            }\n        }\n        if (shapeDrawer === null || shapeDrawer === void 0 ? void 0 : shapeDrawer.loadShape) {\n            await shapeDrawer.loadShape(this);\n        }\n        const sideCountFunc = shapeDrawer === null || shapeDrawer === void 0 ? void 0 : shapeDrawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = (0,_Utils_ColorUtils_js__WEBPACK_IMPORTED_MODULE_3__.rangeColorToRgb)(this.options.shadow.color);\n        for (const updater of particles.updaters){\n            await updater.init(this);\n        }\n        for (const mover of particles.movers){\n            var _mover_init;\n            await ((_mover_init = mover.init) === null || _mover_init === void 0 ? void 0 : _mover_init.call(mover, this));\n        }\n        await (effectDrawer === null || effectDrawer === void 0 ? void 0 : (_effectDrawer_particleInit = effectDrawer.particleInit) === null || _effectDrawer_particleInit === void 0 ? void 0 : _effectDrawer_particleInit.call(effectDrawer, container, this));\n        await (shapeDrawer === null || shapeDrawer === void 0 ? void 0 : (_shapeDrawer_particleInit = shapeDrawer.particleInit) === null || _shapeDrawer_particleInit === void 0 ? void 0 : _shapeDrawer_particleInit.call(shapeDrawer, container, this));\n        for (const [, plugin] of container.plugins){\n            var _plugin_particleCreated;\n            (_plugin_particleCreated = plugin.particleCreated) === null || _plugin_particleCreated === void 0 ? void 0 : _plugin_particleCreated.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return position.x >= -radius && position.y >= -radius && position.y <= canvasSize.height + radius && position.x <= canvasSize.width + radius;\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters){\n            var _updater_reset;\n            (_updater_reset = updater.reset) === null || _updater_reset === void 0 ? void 0 : _updater_reset.call(updater, this);\n        }\n    }\n    constructor(engine, container){\n        var _this = this;\n        this.container = container;\n        this._calcPosition = function(container, position, zIndex) {\n            let tryCount = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : defaultRetryCount;\n            for (const [, plugin] of container.plugins){\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, _this) : undefined;\n                if (pluginPos) {\n                    return _Utils_Vector3d_js__WEBPACK_IMPORTED_MODULE_6__.Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.calcExactPositionOrRandomFromSize)({\n                size: canvasSize,\n                position: position\n            }), pos = _Utils_Vector3d_js__WEBPACK_IMPORTED_MODULE_6__.Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = _this.getRadius(), outModes = _this.options.move.outModes, fixHorizontal = (outMode)=>{\n                fixOutMode({\n                    outMode,\n                    checkModes: [\n                        \"bounce\"\n                    ],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value)=>pos.x += value,\n                    radius\n                });\n            }, fixVertical = (outMode)=>{\n                fixOutMode({\n                    outMode,\n                    checkModes: [\n                        \"bounce\"\n                    ],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value)=>pos.y += value,\n                    radius\n                });\n            };\n            var _outModes_left;\n            fixHorizontal((_outModes_left = outModes.left) !== null && _outModes_left !== void 0 ? _outModes_left : outModes.default);\n            var _outModes_right;\n            fixHorizontal((_outModes_right = outModes.right) !== null && _outModes_right !== void 0 ? _outModes_right : outModes.default);\n            var _outModes_top;\n            fixVertical((_outModes_top = outModes.top) !== null && _outModes_top !== void 0 ? _outModes_top : outModes.default);\n            var _outModes_bottom;\n            fixVertical((_outModes_bottom = outModes.bottom) !== null && _outModes_bottom !== void 0 ? _outModes_bottom : outModes.default);\n            if (_this._checkOverlap(pos, tryCount)) {\n                const increment = 1;\n                return _this._calcPosition(container, undefined, zIndex, tryCount + increment);\n            }\n            return pos;\n        };\n        this._calculateVelocity = ()=>{\n            const baseVelocity = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getParticleBaseVelocity)(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.degToRad)((0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(moveOptions.angle.value)), radOffset = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.degToRad)((0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(moveOptions.angle.offset)), range = {\n                left: radOffset - rad * half,\n                right: radOffset + rad * half\n            };\n            if (!moveOptions.straight) {\n                res.angle += (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.randomInRange)((0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.setRangeValue)(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRandom)();\n            }\n            return res;\n        };\n        this._checkOverlap = function(pos) {\n            let tryCount = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultRetryCount;\n            const collisionsOptions = _this.options.collisions, radius = _this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries, minRetries = 0;\n            if (retries >= minRetries && tryCount > retries) {\n                throw new Error(\"\".concat(_Utils_Constants_js__WEBPACK_IMPORTED_MODULE_2__.errorPrefix, \" particle is overlapping and can't be placed\"));\n            }\n            return !!_this.container.particles.find((particle)=>(0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getDistance)(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color)=>{\n            if (!color || !this.roll || !this.backColor && !this.roll.alter) {\n                return color;\n            }\n            var _this_roll_angle;\n            const rollFactor = 1, none = 0, backFactor = this.roll.horizontal && this.roll.vertical ? double * rollFactor : rollFactor, backSum = this.roll.horizontal ? Math.PI * half : none, rolled = Math.floor((((_this_roll_angle = this.roll.angle) !== null && _this_roll_angle !== void 0 ? _this_roll_angle : none) + backSum) / (Math.PI / backFactor)) % double;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return (0,_Utils_CanvasUtils_js__WEBPACK_IMPORTED_MODULE_7__.alterHsl)(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position)=>{\n            const container = this.container, zIndexValue = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getRangeValue)(this.options.zIndex.value), minZ = 0;\n            this.position = this._calcPosition(container, position, (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.clamp)(zIndexValue, minZ, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size, defaultRadius = 0;\n            var _this_options_move_center_radius, _this_options_move_center_mode;\n            this.moveCenter = {\n                ...(0,_Utils_Utils_js__WEBPACK_IMPORTED_MODULE_1__.getPosition)(this.options.move.center, canvasSize),\n                radius: (_this_options_move_center_radius = this.options.move.center.radius) !== null && _this_options_move_center_radius !== void 0 ? _this_options_move_center_radius : defaultRadius,\n                mode: (_this_options_move_center_mode = this.options.move.center.mode) !== null && _this_options_move_center_mode !== void 0 ? _this_options_move_center_mode : \"percent\"\n            };\n            this.direction = (0,_Utils_NumberUtils_js__WEBPACK_IMPORTED_MODULE_0__.getParticleDirectionAngle)(this.options.move.direction, this.position, this.moveCenter);\n            switch(this.options.move.direction){\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = _Utils_Vector_js__WEBPACK_IMPORTED_MODULE_5__.Vector.origin;\n        };\n        this._engine = engine;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@tsparticles/engine/browser/Core/Particle.js\n"));

/***/ })

}]);